services:
  # Base de datos PostgreSQL (configuraci贸n simplificada)
  postgres:
    image: postgres:16.0
    restart: unless-stopped
    environment:
      POSTGRES_DB: vrx_reports
      POSTGRES_USER: vrx_user
      POSTGRES_PASSWORD: K67lkk7580*98095102*
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - vicarius-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vrx_user -d vrx_reports"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicaci贸n principal de reportes
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Variables de conexi贸n a la base de datos
      POSTGRES_DB: vrx_reports
      POSTGRES_USER: vrx_user
      POSTGRES_PASSWORD: K67lkk7580*98095102*
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      
      # Variables de Vicarius API
      API_KEY: NEoLXlK8jpFMsMIjTphpTp9OZejI7veKJ6SRiHcv83Z1Ee5k1KY0QxXV8xv5nqw3gTWlSYiY7d6gHJcYFiZgZzKmKZpEwEkiRg70PciohRBjPTVSsdY0dkPsHFj6YKIrEfQ5sQmnBz8BGKu37JIpMoOoYah5gZmZuzqFa9CzpkUn3PW988Z5qPFPGTfgutVHMYzVrykFIGkUldvIpUWvKuF2wOYiBAsQPtpFRubZ8E86AOu3gc6qg6JaLx2481rD
      DASHBOARD_ID: https://unicon.vicarius.cloud
      
      # Configuraci贸n opcional
      OPTIONAL_TOOLS: metabase,webapp
    volumes:
      - ./app/reports:/usr/src/app/reports
      - ./app/logs:/var/log
      - ./app/scripts:/usr/src/app/scripts
      - /etc/localtime:/etc/localtime:ro
    networks:
      - vicarius-network
    ports:
      - "8009:8008"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8008/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Dashboard web opcional (Django)
  webapp:
    build:
      context: ./webapp/mgntDash
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_DB: vrx_reports
      POSTGRES_USER: vrx_user
      POSTGRES_PASSWORD: K67lkk7580*98095102*
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    volumes:
      - webapp_data:/app/db.sqlite3
    networks:
      - vicarius-network
    ports:
      - "8002:8000"

  # Metabase (Dashboard de BI opcional)
  metabase:
    image: metabase/metabase:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: vrx_reports
      MB_DB_PORT: 5432
      MB_DB_USER: vrx_user
      MB_DB_PASS: K67lkk7580*98095102*
      MB_DB_HOST: postgres
      MB_ENCRYPTION_SECRET_KEY: bf9k_d8_G_vPz_qN_s5bT_wE4rY2uI
    volumes:
      - metabase_data:/metabase-data
    networks:
      - vicarius-network
    ports:
      - "3002:3000"

volumes:
  postgres_data:
    driver: local
  webapp_data:
    driver: local
  metabase_data:
    driver: local

networks:
  vicarius-network:
    driver: bridge
